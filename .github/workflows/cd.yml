# Ce fichier déploie automatiquement ton code quand tu push sur main
name: Déploiement Automatique

# QUAND ça se déclenche : seulement sur main/master après que les tests passent
on:
  push:
    branches: [ main, master ]

jobs:
  # JOB 1: Construire et sauvegarder les images Docker
  build-images:
    name: "🏗️ Construction des images Docker"
    runs-on: ubuntu-latest
    # Seulement si on est sur main/master
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: "📥 Récupération du code"
      uses: actions/checkout@v4

    - name: "🐳 Configuration Docker"
      uses: docker/setup-buildx-action@v3

    # Optionnel : Si tu veux push sur Docker Hub
    # Décommente ces lignes si tu veux sauvegarder tes images
    # - name: "🔐 Connexion Docker Hub"
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    - name: "🏗️ Build de toutes les images"
      run: |
        # ✅ CORRECTION: Utiliser la nouvelle syntaxe Docker Compose
        docker compose build
        echo "✅ Toutes les images sont construites !"
        
        # Optionnel : Les taguer pour Docker Hub
        # docker tag f_brain-lvl2_web:latest ${{ secrets.DOCKER_USERNAME }}/f-brain-web:latest
        # docker tag f_brain-lvl2_frontend:latest ${{ secrets.DOCKER_USERNAME }}/f-brain-frontend:latest
        
        # Optionnel : Les pusher sur Docker Hub  
        # docker push ${{ secrets.DOCKER_USERNAME }}/f-brain-web:latest
        # docker push ${{ secrets.DOCKER_USERNAME }}/f-brain-frontend:latest

  # JOB 2: Simulation de déploiement (pour commencer)
  deploy-simulation:
    name: "🚀 Simulation de déploiement"
    runs-on: ubuntu-latest
    needs: build-images
    
    steps:
    - name: "📥 Récupération du code"
      uses: actions/checkout@v4

    - name: "🧪 Test de déploiement local"
      run: |
        echo "🚀 Simulation du déploiement..."
        
        # ✅ CORRECTION: Utiliser la nouvelle syntaxe Docker Compose
        docker compose up -d
        
        # Attendre que tout soit prêt
        echo "⏳ Attente que les services démarrent..."
        sleep 45
        
        # Vérifier que les services répondent
        echo "🔍 Vérification des services..."
        
        # Test du backend
        if curl -f http://localhost:8000/health 2>/dev/null; then
          echo "✅ Backend fonctionne !"
        else
          echo "⚠️ Backend ne répond pas (normal si pas de route /health)"
        fi
        
        # Test du frontend
        if curl -f http://localhost:5174 2>/dev/null; then
          echo "✅ Frontend fonctionne !"
        else
          echo "⚠️ Frontend ne répond pas"
        fi
        
        # Test du proxy nginx
        if curl -f http://localhost:80 2>/dev/null; then
          echo "✅ Proxy nginx fonctionne !"
        else
          echo "⚠️ Proxy ne répond pas"
        fi
        
        echo "🏁 Simulation terminée !"
        
        # ✅ CORRECTION: Utiliser la nouvelle syntaxe Docker Compose
        docker compose down

  # JOB 3: Notification (optionnel)
  notify:
    name: "📢 Notification"
    runs-on: ubuntu-latest
    needs: [deploy-simulation]
    if: always()  # Toujours exécuter, même en cas d'échec
    
    steps:
    - name: "✅ Succès du déploiement"
      if: success()
      run: |
        echo "🎉 Déploiement réussi !"
        echo "Ton application F-Brain a été déployée avec succès."
        
    - name: "❌ Échec du déploiement"  
      if: failure()
      run: |
        echo "😞 Quelque chose a échoué..."
        echo "Vérifie les logs ci-dessus pour voir le problème."

# POUR PLUS TARD : Déploiement réel sur un serveur
# Une fois que tu as un serveur, tu peux décommenter et adapter ceci :
#
#  deploy-real:
#    name: "🚀 Déploiement réel"
#    runs-on: ubuntu-latest  
#    needs: build-images
#    # Seulement si tu as configuré un serveur
#    if: false  # Changer à true quand tu es prêt
#    
#    steps:
#    - name: "🚀 Déploiement SSH"
#      uses: appleboy/ssh-action@v1.0.0
#      with:
#        host: ${{ secrets.SERVER_HOST }}
#        username: ${{ secrets.SERVER_USER }}
#        key: ${{ secrets.SERVER_SSH_KEY }}
#        script: |
#          cd /path/to/your/app
#          git pull origin main
#          # ✅ CORRECTION: Utiliser la nouvelle syntaxe Docker Compose
#          docker compose down
#          docker compose up -d