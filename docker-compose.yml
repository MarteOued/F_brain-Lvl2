services:
  server:
    build: ./server
    command: poetry run python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    networks:
      - backend

  client:
    build: ./client/vite-project
    volumes:
      - ./client/vite-project:/app
      - /app/node_modules
    ports:
      - "5174:5174"
    networks:
      - frontend
    environment:
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  celery:
    build: ./server
    command: poetry run celery -A server_conf.celery_app worker --loglevel=info
    volumes:
      - ./server:/app
    networks:
      - backend
    depends_on:
      - rabbitmq
      - db

  nginx:
    build: ./proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - frontend
      - backend
    depends_on:
      - client
      - server

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "3000:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge